{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","classes","item","src","message","likes_count","maxLength","maxLengthCreator","ReduxPostForm","reduxForm","form","onSubmit","handleSubmit","text","Field","component","Textarea","name","placeholder","validate","requiredField","button","MyPosts","memo","console","log","postsElements","posts","map","post","likesCount","postsBlock","addPost","values","postText","MyPostsContainer","profilePage","newPostText","dispatch","addPostActionCreator","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileInfo","profile","descriptionBlock","photos","large","profile_img","Preloader","Profile","content","ProfileContainer","userId","match","params","authorisedUserId","getUserProfile","getUserStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.590008a1.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth)\r\n      {\r\n        return <Redirect to={\"/login\"}/>\r\n      }\r\n\r\n      return <Component {...this.props}/> \r\n    }\r\n  }\r\n  \r\n  let AuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return AuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__bms3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2VDkZ\",\"button\":\"MyPosts_button__3nVnt\",\"posts\":\"MyPosts_posts__3jI3b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_img\":\"ProfileInfo_profile_img__RbfxI\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__zsxAC\"};","import React from 'react'\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src='https://www.w3schools.com/howto/img_avatar2.png'/>\r\n      {props.message}\r\n      <div><span>Like </span>{props.likes_count}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React, { Component } from 'react'\r\nimport Post from './Post/Post'\r\nimport classes from './MyPosts.module.css'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { requiredField, maxLengthCreator } from '../../../utils/validators'\r\nimport { Textarea } from '../../common/formsControlls/FormsControlls'\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\nconst PostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={classes.text}>\r\n        <Field component={Textarea} name={\"postText\"} placeholder={\"Enter new post...\"} validate={[requiredField, maxLength]}/>\r\n      </div>\r\n      <div className={classes.button}>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ReduxPostForm = reduxForm({\r\n  form: \"addPost\"\r\n})(PostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  console.log(\"RENDER\");\r\n  let postsElements = props.posts.map(post => <Post message={post.message} likes_count={post.likesCount}/>);\r\n\r\n  let addPost = (values) => { \r\n    addPost(values.postText);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <ReduxPostForm onSubmit={addPost}/>\r\n      <div className={classes.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (postText) => {dispatch(addPostActionCreator(postText))}\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// class ProfileStatus extends React.Component {\r\n  \r\n//   state = {\r\n//     editMode: false,\r\n//     status: this.props.status\r\n//   }\r\n\r\n//   activateEditMode = () => {\r\n//     this.setState({\r\n//       editMode: true\r\n//     })\r\n//   }\r\n\r\n//   desactivateEditMode = () => {\r\n//     this.setState({\r\n//       editMode: false\r\n//     })\r\n//     this.props.updateUserStatus(this.state.status);\r\n//   }\r\n\r\n//   onStatusChange = (e) => {\r\n//     this.setState({\r\n//       status: e.currentTarget.value\r\n//     });\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if(prevProps.status !== this.props.status)\r\n//     {\r\n//       this.setState({\r\n//         status: this.props.status\r\n//       })\r\n//     }\r\n//   }\r\n\r\n//   render()\r\n//   {\r\n//     return (\r\n//       <div>\r\n//         {!this.state.editMode &&\r\n//         <div>\r\n//           <span onDoubleClick={this.activateEditMode}>{this.props.status || \"No status\"}</span>\r\n//         </div>}\r\n//         {this.state.editMode &&\r\n//         <div>\r\n//           <input onChange={this.onStatusChange} autoFocus={true} value={this.state.status}/>\r\n//         </div>}\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n// export default ProfileStatus;\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const desactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateUserStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n      <div>\r\n        <span onDoubleClick={activateEditMode}>{props.status || \"No status\"}</span>\r\n      </div>}\r\n      {editMode &&\r\n      <div>\r\n        <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={desactivateEditMode}/>\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport classes from './ProfileInfo.module.css'\r\nimport ProfileStatus from './ProfileStatus'\r\n\r\nconst ProfileInfo = (props) => {\r\n  if(!props.profile)\r\n  {\r\n    return <Preloader/>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.descriptionBlock}>\r\n        {props.profile.photos.large !== null ? <img src={props.profile.photos.large}/> :  <img className={classes.profile_img} src=\"https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg\"/>}\r\n        <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport classes from './Profile.module.css'\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={classes.content}>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n      <MyPostsContainer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Profile from './Profile';\r\nimport classes from './Profile.module.css'\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from '../../redux/profileReducer'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    \r\n    if(!userId)\r\n    {\r\n      userId = this.props.authorisedUserId;\r\n      // if(!userId)\r\n      // {\r\n        \r\n      //   this.props.history.push(\"/login\");\r\n      // }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className={classes.content}>\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateUserStatus={this.props.updateUserStatus}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorisedUserId: state.userId,\r\n  isAuth: state.auth.isAuth \r\n})\r\n\r\nexport default compose (\r\n  connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}