{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","classes","dialog","active","id","name","Message","message_wrapper","message","maxLength","maxLengthCreator","ReduxMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","messagesElements","messages","dialogsItems","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"sOAIIA,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,SAGRE,EAAmB,SAACC,GAAe,IAExCC,EAFuC,4JAG3C,WACE,OAAKC,KAAKC,MAAMN,OAKT,cAACG,EAAD,eAAeE,KAAKC,QAHlB,cAAC,IAAD,CAAUC,GAAI,eANkB,GAEbC,IAAML,WAatC,OAF4BM,YAAQX,EAARW,CAAoCL,K,oBCpBlEM,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,0CCA/DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,kFCWnKC,EARI,SAACN,GAClB,OACE,qBAAKO,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,SACE,eAAC,IAAD,CAAST,GAAI,YAAcD,EAAMW,GAAjC,cAAuCX,EAAMY,KAA7C,U,kBCSSC,EAbC,SAACb,GAEf,OACE,8BACE,qBAAKO,UAAWC,IAAQM,gBAAxB,SACE,qBAAKP,UAAWC,IAAQC,OAAxB,SACKT,EAAMe,e,2DCAbC,EAAYC,YAAiB,IAe7BC,EAAmBC,YAAU,CACjCC,KAAM,kBADiBD,EAbL,SAACnB,GACnB,OACE,uBAAMqB,SAAUrB,EAAMsB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAeX,GAAWJ,KAAK,iBAAiBgB,YAAY,yBAErG,8BACE,0DAwCOC,EA9BC,SAAC7B,GAEf,IAAIP,EAAQO,EAAM8B,YAEdC,EAAkBtC,EAAMuC,QAAQC,KAAK,SAAAxB,GAAM,OAAI,cAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMD,GAAIF,EAAOE,QAEzFuB,EAAmBzC,EAAM0C,SAASF,KAAK,SAAAlB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,aAMhF,OAAKf,EAAMN,OAMT,sBAAKa,UAAWC,IAAQwB,QAAxB,UACE,qBAAKzB,UAAWC,IAAQ4B,aAAxB,SACGL,IAEH,sBAAKxB,UAAWC,IAAQ2B,SAAxB,UACE,8BAAMD,IACN,cAAChB,EAAD,CAAkBG,SAhBJ,SAACgB,GACnBrC,EAAMsC,YAAYD,EAAOE,yBAKlB,cAAC,IAAD,CAAUtC,GAAI,Y,kCCxBVuC,sBACbrC,aAboB,SAACV,GACrB,MAAO,CACLqC,YAAarC,EAAMqC,gBAIE,SAACW,GACxB,MAAO,CACLH,YAAa,SAACC,GAAoBE,EAASC,YAAmBH,SAMhE3C,IAFa4C,CAGbX","file":"static/js/4.60d90b53.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth)\r\n      {\r\n        return <Redirect to={\"/login\"}/>\r\n      }\r\n\r\n      return <Component {...this.props}/> \r\n    }\r\n  }\r\n  \r\n  let AuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return AuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__j-zVJ\",\"active\":\"DialogItem_active__1CTR2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__q6vHd\",\"dialogsItems\":\"Dialogs_dialogsItems__2Zc8v\",\"dialog\":\"Dialogs_dialog__3LIAG\",\"messages\":\"Dialogs_messages__2NT4w\",\"message\":\"Dialogs_message__2BSCl\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './DialogItem.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={classes.dialog + \" \" + classes.active}>\r\n      <NavLink to={'/dialogs/' + props.id}> {props.name} </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.message_wrapper}>\r\n        <div className={classes.dialog}>\r\n            {props.message}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport classes from './Dialogs.module.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/formsControlls/FormsControlls';\r\nimport { maxLengthCreator, requiredField } from '../../utils/validators';\r\n\r\nconst maxLength = maxLengthCreator(50);\r\n\r\nconst MessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} validate={[requiredField, maxLength]}name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n      </div>\r\n      <div>\r\n        <button>Send message</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ReduxMessageForm = reduxForm({\r\n  form: \"addMessageForm\"\r\n})(MessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map( dialog => <DialogItem name={dialog.name} id={dialog.id} />);\r\n\r\n  let messagesElements = state.messages.map( message => <Message message={message.message}/>);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n  if (!props.isAuth)\r\n  {\r\n    return <Redirect to={'/login'}/>\r\n  }\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={classes.messages}>\r\n        <div>{messagesElements}</div>\r\n        <ReduxMessageForm onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport { sendMessageCreator } from '../../redux/dialogsReducer';\r\nimport { connect } from 'react-redux/es/exports';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {dispatch(sendMessageCreator(newMessageBody))}\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}